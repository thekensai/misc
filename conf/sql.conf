input {
	jdbc {
		jdbc_driver_library => "D:\sqljdbc_6.0\enu\jre8\sqljdbc42.jar"
		jdbc_driver_class => "com.microsoft.sqlserver.jdbc.SQLServerDriver"
		jdbc_connection_string => "jdbc:sqlserver://ljsql2.lj-oz.com:1433;databaseName=Savvy-WebCrawlerData4;user=ice;password=ABC123abc123;"
		jdbc_user => "ice"
		jdbc_password => "ABC123abc123"
		statement => "select [TargetRaw] as target, checksum as checksum/*, sequence as seq*/ from [TargetResolution] order by checksum, sequence"
	}
}
filter {


  aggregate {
         task_id => "%{checksum}"
         code => "
          map['count'] ||= 0
          map['count'] += 1
          map['adserver'] ||= []
          event.to_hash.each do |key,value|
          	
            if key == 'target' then
		   		idx = value.index('//')
		   		url = value[idx+2..value.index('/', idx + 2)-1]
		   		map['adserver'] << url
		   		map['target'] = url
		  	end
          end
         "
         push_previous_map_as_event => true
         timeout => 5
         timeout_tags => ['aggregated']
     }

     if "aggregated" not in [tags] {
      drop {}
     }

if [count] == 1 {
      drop {}
     }

	mutate {
    remove_field => [ "@timestamp", "@version", "tags"]
  }
 

  elasticsearch {
    
    enable_sort => false

  }
}
output {
	elasticsearch {
		hosts => ["localhost"]
		index => "creative"
		
		document_type => "adserver"
		document_id => "%{target}"
		script_lang => "groovy"
    	script_type => "inline"
		script => 'if (ctx._source.sequence) {
		    ctx._source.sequence += %{sequence}
		    } else {
		    ctx._source.sequence = [%{sequence}]
		    }'
	}
	stdout { codec => rubydebug }
}